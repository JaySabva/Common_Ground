/* Schema for course */

const mongoose = require('mongoose');

const courseSchema = new mongoose.Schema({
  courseTitle: {
    type: String,
    required: true,
    trim: true, // Removes leading/trailing whitespace
  },
  courseDescription: {
    type: String,
    trim: true,
  },
  coursePrice: {
    type: Number,
    required: true,
  },
  thumbnail: {
    type: String, // You can specify a URL or file path here
  },
  categories: [{
    type: String, // Assuming categories are stored as strings
  }],
  courseLevel: {
    type: String, // You can specify 'beginner', 'intermediate', 'advanced', etc.
  },
  courseCode: {
    type: String,
    unique: true, // Ensure each course has a unique code
  },
  dateCreated: {
    type: Date,
    default: Date.now, // Set to the current date by default
  },
  courseSections: [{
    type: mongoose.Schema.Types.ObjectId, // Reference to a section document
    ref: 'CourseSection',
  }],
  courseAssignments: [{
    type: mongoose.Schema.Types.ObjectId, // Reference to an assignment document
    ref: 'CourseAssignment',
  }],
  prerequisites: [{
    type: mongoose.Schema.Types.ObjectId, // Reference to other courses as prerequisites
    ref: 'Course',
  }],
  createdBy: {
    type: mongoose.Schema.Types.ObjectId, // Reference to the user who created the course
    ref: 'User',
  },
  enrolledStudents: [{
    type: mongoose.Schema.Types.ObjectId, // Reference to user documents representing enrolled students
    ref: 'User',
  }],
  rating: {
    type: Number,
    default: 0, // Initialize with a default rating of 0
  },
  discussionForum: {
    type: mongoose.Schema.Types.ObjectId, // Reference to a forum document for course discussions
    ref: 'DiscussionForum',
  },
  courseCertificate: {
    type: String, // You can specify a URL or file path for certificates
  },
});

module.exports = mongoose.model('Course', courseSchema);
